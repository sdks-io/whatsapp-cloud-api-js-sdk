/**
 * WhatsApp Cloud APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { Audio, audioSchema } from './audio';
import { Contact, contactSchema } from './contact';
import { Document, documentSchema } from './document';
import { Image, imageSchema } from './image';
import { Interactive, interactiveSchema } from './interactive';
import { Location, locationSchema } from './location';
import { MessageTypeEnum, messageTypeEnumSchema } from './messageTypeEnum';
import { Sticker, stickerSchema } from './sticker';
import { Template, templateSchema } from './template';
import { Text, textSchema } from './text';
import { Video, videoSchema } from './video';

export interface Message {
  /** A media object containing audio. Required when type=audio. */
  audio?: Audio;
  /** A contact object. Required when type=contacts. */
  contacts?: Contact[];
  /** A media object containing a document. Required when type=document. */
  document?: Document;
  /** A media object containing an image. Required when type=image. */
  image?: Image;
  /** This option is used to send List Messages and Reply Buttons. The components of each interactive object generally follow a consistent pattern: header, body, footer, and action. Required when type=interactive. */
  interactive?: Interactive;
  /** A location object. Required when type=location. */
  location?: Location;
  /** Messaging service used for the request. */
  messagingProduct: string;
  /** Currently, you can only send messages to individuals. */
  recipientType?: string;
  /** A media object containing a sticker. Currently, we support inbound both and outbound stickers: For outbound, we only support static third-party stickers. For inbound, we support all types of stickers. The sticker needs to be 512x512 pixels and the fileâ€™s size needs to be less than 100 KB. Required when type=sticker. */
  sticker?: Sticker;
  /** A template object. Required when type=template. */
  template?: Template;
  /** Required for text messages. */
  text?: Text;
  /** WhatsApp ID or phone number for the person you want to send a message to. */
  to: string;
  /** The type of message you want to send. */
  type?: MessageTypeEnum;
  /** A media object containing a video. Required when type=video. */
  video?: Video;
}

export const messageSchema: Schema<Message> = object({
  audio: ['audio', optional(lazy(() => audioSchema))],
  contacts: ['contacts', optional(array(lazy(() => contactSchema)))],
  document: ['document', optional(lazy(() => documentSchema))],
  image: ['image', optional(lazy(() => imageSchema))],
  interactive: ['interactive', optional(lazy(() => interactiveSchema))],
  location: ['location', optional(lazy(() => locationSchema))],
  messagingProduct: ['messaging_product', string()],
  recipientType: ['recipient_type', optional(string())],
  sticker: ['sticker', optional(lazy(() => stickerSchema))],
  template: ['template', optional(lazy(() => templateSchema))],
  text: ['text', optional(lazy(() => textSchema))],
  to: ['to', string()],
  type: ['type', optional(messageTypeEnumSchema)],
  video: ['video', optional(lazy(() => videoSchema))],
});
